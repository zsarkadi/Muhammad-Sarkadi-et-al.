library(tidyverse)
setwd("D:/documents/Heterochromatin_screen/analysis/Heterochromatin_screen_R/clustering_new_figure_3")

tbl_strain_wrong <- read_csv("gene_red_list_v3.csv")
tbl_big <- read_csv("screendata_imrS36S37_replacedby_S34S35.csv")

tbl_hits <- read_csv("hits_20221213.csv")


# define hits

tbl_hits <- tbl_hits %>% 
  mutate(hit=case_when(p_value<0.05 & URA_minus_FOA_score>2 ~ TRUE,
                       TRUE~FALSE))

tbl_hits_2 <- tbl_hits %>% 
  filter(hit==TRUE) %>% 
  group_by(gene) %>% 
  mutate(domain_hits=n()) %>% 
  ungroup()

# all hits
tbl_hits %>% 
  filter(hit==TRUE) %>% 
  pull(gene) %>% 
  unique()

tbl_hits_wide <- tbl_hits_2 %>% 
  select(gene, heterochromatic_region,URA_minus_FOA_score, domain_hits) %>% 
  pivot_wider(names_from = heterochromatic_region, values_from = URA_minus_FOA_score)

library('UpSetR')

require(ggplot2); require(plyr); require(gridExtra); require(grid);


tbl_hits_wide

tbl_hits_wide_2 <- tbl_hits_wide %>% mutate_if(is.numeric, ~1 * (. != 0))

tbl_hits_wide_2[is.na(tbl_hits_wide_2)] <- 0

# combine subtel and tel 

tbl_hits_wide_3 <- tbl_hits_wide_2 %>% 
  mutate("subtel/tel"=case_when(tel==1|subtel==1~1,
                                TRUE~0)) %>%
  select(-tel, -subtel)

tbl_hits_wide_3$domain_hits<- rowSums(tbl_hits_wide_3[, 3:5])

plot_upset <- upset(tbl_hits_wide_2,
                    sets = c("imr", "mat", "subtel"),
                    order.by="freq", matrix.color="blue", point.size=5,
                    sets.bar.color=c("maroon","blue","orange"),
                    text.scale = c(1.3, 1.3, 1.3, 1.3, 2, 1.3))

pdf("Figures/Upset_plot_v3.pdf", width = 7, height = 5)
plot_upset
dev.off()

cluster1_list <- 
  tbl_hits_wide_3 %>% 
  filter(imr==1 & mat==1 & `subtel/tel`==1) %>% 
  pull(gene) %>% 
  unique()

cluster2_list <- tbl_hits_wide_3 %>% 
  filter(imr==1 & mat==1 & `subtel/tel`==0) %>%
  pull(gene)

cluster3_list <- tbl_hits_wide_3 %>% 
  filter(domain_hits==2) %>% 
  filter(`subtel/tel`==1 & (imr==1| mat==1)) %>%
  pull(gene)

cluster4_list <- tbl_hits_wide_3 %>% 
  filter(domain_hits==1) %>%
  filter(imr==1 & mat==0 & `subtel/tel`==0 ) %>%
  pull(gene)

cluster5_list <- tbl_hits_wide_3 %>% 
  filter(imr==0 & mat==0 & `subtel/tel`==1) %>%
  pull(gene)

cluster6_list <- tbl_hits_wide_3 %>% 
  filter(imr==0 & mat==1 & `subtel/tel`==0 ) %>%
  pull(gene)


all_clusters_list <- c(cluster1_list, cluster2_list, cluster3_list, cluster4_list, cluster5_list, cluster6_list)  
#215
all_clusters_list %>% 
  unique()
#215


##remove contaminated

tbl_big_wt <- tbl_big %>% 
  select(gene, systematic_ID, contains(c("wt", "2677" ))) %>% 
  filter(!grepl("WT-", gene))

colnames(tbl_big_wt)

#2968

tbl_strain_wrong <- tbl_strain_wrong %>% 
  filter(!gene %in% c("mug168", "arg5", "SPAC1782.12c"
  ))

tbl_strain_wrong2 <- tbl_strain_wrong %>% 
  select(systematic_ID)
strain_wrong <- tbl_strain_wrong2[[1]]

tbl_data2 <- tbl_big_wt %>% 
  filter(!systematic_ID %in% strain_wrong) 
#2968

##rename strains that not correct 

tbl_data2$gene <- gsub("ppm1", "poz1", tbl_data2$gene )
tbl_data2$systematic_ID <- gsub("SPBP8B7.08c", "SPAC19G12.13c", tbl_data2$systematic_ID)

# remove swi6*
tbl_data2 <- tbl_data2 %>% 
  filter(!gene %in% c("swi6", "nup132"))
#2967

# remove genes next to mating type locus

tbl_data2 <- tbl_data2 %>% 
  filter(!gene %in% c("SPBC23G7.14", "SPBC1711.09c", "aha1", "emc3", "SPBC16G5.17", "mtd1", "srp40"))
#2961

## log2

colnames2<- colnames(tbl_data2)
colnames2 <- colnames2[3:62]

tbl_log2 <- tbl_data2 %>%
  mutate_at(.vars=colnames2,.funs = function(x) { log2(x)})

sum(is.na(tbl_log2))

library(dplyr)

is.na(tbl_log2) <- sapply(tbl_log2, is.infinite)


# cluster 1 ####
tbl1 <- tbl_log2  %>% 
  filter(gene %in% cluster1_list)

mx1<-as.matrix(tbl1 %>%
                 select(-(1), -(2)))

rname <- tbl1$gene

rownames(mx1) <- rname

#mx2 <- scale(mx1)

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

#as.matrix(my_dist_1) %>% View()

clustering_object1<-hclust(my_dist_1)


#plot(clustering_object1)

dend <- as.dendrogram(clustering_object1)
dend_2 <- flip_leaves(dend,leaves1 = c(4,15), leaves2 = c(3,10))

tanglegram(dend, dend_2)
row.ord <- order.dendrogram(dend_2)

orderer_labels1<-clustering_object1$labels[row.ord] 

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=17,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

require(dendextend)
gg.dend <- as.ggdend(dend_2 %>% set("branches_lwd", 0.2))
dend1.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  #scale_x_reverse()+
  coord_flip()+
  theme(plot.margin = unit(c(1.6, 0, 0, 0), "cm"))

library(ggh4x)

regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

require(ggplot2)
map1.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0, 1.4, 0.1, 0), "cm"),
        strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_text(size = 9),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))+
  labs(fill="relative growth")


require(cowplot)
plot_grid(dend1.plot, map1.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster1.pdf", width=10, height=3.5, limitsize = FALSE)


# cluster 2 ####

tbl2 <- tbl_log2  %>% 
  filter(gene %in% cluster2_list)

mx1<-as.matrix(tbl2 %>%
                 select(-(1), -(2)))

rname <- tbl2$gene

rownames(mx1) <- rname

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

clustering_object1<-hclust(my_dist_1)
orderer_labels1<-clustering_object1$labels[clustering_object1$order] 


dend <- as.dendrogram(clustering_object1)
row.ord <- order.dendrogram(dend)

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=22,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

gg.dend <- as.ggdend(dend %>% set("branches_lwd", 0.2))
dend2.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  coord_flip()+
  theme(plot.margin = unit(c(0.2, 0, -0.25, 0), "cm"))


regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

map2.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0.1, 1.4, 0.1, 0), "cm"),
        #strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_blank(),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))


require(cowplot)
plot_grid(dend2.plot, map2.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster2.pdf", width=10, height=4.5, limitsize = FALSE)

# cluster3 ####

tbl3 <- tbl_log2  %>% 
  filter(gene %in% cluster3_list)

mx1<-as.matrix(tbl3 %>%
                 select(-(1), -(2)))


rname <- tbl3$gene

rownames(mx1) <- rname

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

clustering_object1<-hclust(my_dist_1)
orderer_labels1<-clustering_object1$labels[clustering_object1$order] 

dend <- as.dendrogram(clustering_object1)
row.ord <- order.dendrogram(dend)

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=28,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

require(dendextend)
gg.dend <- as.ggdend(dend%>% set("branches_lwd", 0.2))
dend3.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  coord_flip()+
  theme(plot.margin = unit(c(0.2, 0, -0.25, 0), "cm"))


regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

require(ggplot2)
map3.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0.1, 1.4, 0.1, 0), "cm"),
        strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_blank(),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))

plot_grid(dend3.plot, map3.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster3.pdf", width=10, height=4.5, limitsize = FALSE)

# cluster 4 ####

tbl4 <- tbl_log2  %>% 
  filter(gene %in% cluster4_list)

mx1<-as.matrix(tbl4 %>%
                 select(-(1), -(2)))

rname <- tbl4$gene

rownames(mx1) <- rname

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

clustering_object1<-hclust(my_dist_1)
orderer_labels1<-clustering_object1$labels[clustering_object1$order] 

dend <- as.dendrogram(clustering_object1)
row.ord <- order.dendrogram(dend)

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=41,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

gg.dend <- as.ggdend(dend%>% set("branches_lwd", 0.2))
dend4.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  coord_flip()+
   theme(plot.margin = unit(c(0.2, 0, -0.25, 0), "cm"))


regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

map4.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0.1, 1.4, 0.1, 0), "cm"),
        strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_blank(),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))

plot_grid(dend4.plot, map4.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster4.pdf", width=10, height=5.5, limitsize = FALSE)

# cluster 5 ####

tbl5 <- tbl_log2  %>% 
  filter(gene %in% cluster5_list)

mx1<-as.matrix(tbl5 %>%
                 select(-(1), -(2)))

rname <- tbl5$gene

rownames(mx1) <- rname

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

clustering_object1<-hclust(my_dist_1)
orderer_labels1<-clustering_object1$labels[clustering_object1$order] 

dend <- as.dendrogram(clustering_object1)
row.ord <- order.dendrogram(dend)

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=50,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

gg.dend <- as.ggdend(dend%>% set("branches_lwd", 0.2))
dend5.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  coord_flip()+
  theme(plot.margin = unit(c(0.2, 0, -0.25, 0), "cm"))


regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

map5.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0.1, 1.4, 0.1, 0), "cm"),
        strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_blank(),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))

plot_grid(dend5.plot, map5.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster5.pdf", width=10, height=5.5, limitsize = FALSE)

# cluster 6 ####

tbl6 <- tbl_log2  %>% 
  filter(gene %in% cluster6_list)

mx1<-as.matrix(tbl6 %>%
                 select(-(1), -(2)))

rname <- tbl6$gene

rownames(mx1) <- rname

my_dist_1 <- dist(mx1, method = "euclidean") 
sum(is.na(my_dist_1))

clustering_object1<-hclust(my_dist_1)
orderer_labels1<-clustering_object1$labels[clustering_object1$order] 

dend <- as.dendrogram(clustering_object1)
row.ord <- order.dendrogram(dend)

nrow(mx1)
mat <- matrix(mx1[row.ord,],nrow=57,ncol=60,dimnames=list(rownames(mx1)[row.ord],colnames(mx1)))
mat.df <- reshape2::melt(mat,value.name="expr",varnames=c("gene","sample"))


## heatmap

gg.dend <- as.ggdend(dend%>% set("branches_lwd", 0.2))
dend6.plot <- 
  ggplot(gg.dend,labels=F)+
  scale_y_reverse()+
  coord_flip()+
  theme(plot.margin = unit(c(0.2, 0, -0.25, 0), "cm"))


regexp1<-"^([^_]+)_([^_]+)_([^_]+)_([^_]+)_([^_]+)$"
heatmap_data2 <- mat.df %>% 
  mutate(medium=gsub(regexp1,"\\2", sample)) %>%
  mutate(locus=gsub(regexp1,"\\1", sample)) %>%
  mutate(replicate=gsub(regexp1,"\\5", sample))

heatmap_data2 <- heatmap_data2 %>% 
  mutate(locus2=case_when(grepl("CRISP", sample)~"subtel",
                          TRUE~locus))

heatmap_data2$locus_f = factor(heatmap_data2$locus2,levels = c("imr", "mat", "subtel", "tel"))

map6.plot <- 
  ggplot(heatmap_data2,aes(x=sample,y=gene))+
  geom_raster(aes(fill=expr))+
  scale_fill_gradient2(low = "dodgerblue4", high = "brown", midpoint = 0, na.value = "grey", mid = "white")+
  scale_y_discrete(position="right", limits=orderer_labels1)+
  facet_nested(.~locus_f+medium,scales = "free", space = "free")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.text.y = element_text(size = 6),
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        # margin: top, right, bottom, and left
        plot.margin = unit(c(0.1, 1.4, 0.1, 0), "cm"),
        strip.background=element_rect(color="gray50", fill = "gray90"),
        strip.text.x = element_blank(),
        panel.spacing=unit(0, "mm"),
        panel.border=element_rect(color="gray70"))

plot_grid(dend6.plot, map6.plot, align='h', rel_widths=c(0.2,1), scale=c(1.14,1))
#ggsave("Figures/cluster6.pdf", width=10, height=5.5, limitsize = FALSE)


# together ####

my_legend <- get_legend(map1.plot + theme(legend.position="top"))  # megszerzem a legend-et
heatmap1_V2<-map1.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank() )
heatmap2_V2<-map2.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank())
heatmap3_V2<-map3.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank())
heatmap4_V2<-map4.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank())
heatmap5_V2<-map5.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank())
heatmap6_V2<-map6.plot + theme(legend.position="none", axis.text.y = element_blank(), axis.ticks = element_blank())# a 2-es verziorol torlom a legend-et

combi1<-cowplot::plot_grid( dend1.plot, heatmap1_V2, nrow=1, align='h', rel_widths = c(0.2, 1), scale=c(1.25,1))
combi2<-cowplot::plot_grid( dend2.plot, heatmap2_V2, nrow=1, align = 'h', rel_widths = c(0.2, 1), scale=c(1.1,1))
combi3<-cowplot::plot_grid( dend3.plot, heatmap3_V2, nrow=1, align = 'h', rel_widths = c(0.2, 1), scale=c(1.1,1))
combi4<-cowplot::plot_grid( dend4.plot, heatmap4_V2, nrow=1, align = 'h', rel_widths = c(0.2, 1), scale=c(1.1,1))
combi5<-cowplot::plot_grid( dend5.plot, heatmap5_V2, nrow=1, align = 'h', rel_widths = c(0.2, 1), scale=c(1.1,1))
combi6<-cowplot::plot_grid( dend6.plot, heatmap6_V2, nrow=1, align = 'h', rel_widths = c(0.2, 1), scale=c(1.1,1))

big_plot<-cowplot::plot_grid(combi1, combi2, combi3 ,combi4, combi5, combi6, ncol=1, rel_heights=c(24, 22, 28,41,50, 57))

print(big_plot)
ggsave(big_plot, file="Figures/together_v3.pdf", width=110, height=230, unit="mm")

